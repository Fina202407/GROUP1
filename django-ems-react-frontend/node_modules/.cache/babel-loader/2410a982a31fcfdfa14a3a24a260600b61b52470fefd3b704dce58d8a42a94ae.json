{"ast":null,"code":"var _jsxFileName = \"C:\\\\SMS2\\\\django-ems-react-frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// Import necessary packages\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  // Retrieve JWT token from local storage\n  const token = localStorage.getItem(\"token\");\n\n  // Check if the user is authenticated\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this); // Redirect to login page if not authenticated\n  }\n  return children; // Render the protected component if authenticated\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/SMS2/django-ems-react-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// Import necessary packages\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    // Retrieve JWT token from local storage\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // Check if the user is authenticated\r\n    if (!token) {\r\n        return <Navigate to=\"/\" replace />; // Redirect to login page if not authenticated\r\n    }\r\n\r\n    return children; // Render the protected component if authenticated\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAI,CAACF,KAAK,EAAE;IACR,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACxC;EAEA,OAAOT,QAAQ,CAAC,CAAC;AACrB,CAAC;AAACU,EAAA,GAVIX,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}